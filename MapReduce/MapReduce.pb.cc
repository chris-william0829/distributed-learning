// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MapReduce.proto

#include "MapReduce.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace MapReduce {

inline constexpr AckAndQueryNewTaskResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : tasktype_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        filename_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        taskid_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AckAndQueryNewTaskResponse::AckAndQueryNewTaskResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AckAndQueryNewTaskResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AckAndQueryNewTaskResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AckAndQueryNewTaskResponseDefaultTypeInternal() {}
  union {
    AckAndQueryNewTaskResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AckAndQueryNewTaskResponseDefaultTypeInternal _AckAndQueryNewTaskResponse_default_instance_;

inline constexpr AckAndQueryNewTaskRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : tasktype_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        workerid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        previoustaskid_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AckAndQueryNewTaskRequest::AckAndQueryNewTaskRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AckAndQueryNewTaskRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AckAndQueryNewTaskRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AckAndQueryNewTaskRequestDefaultTypeInternal() {}
  union {
    AckAndQueryNewTaskRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AckAndQueryNewTaskRequestDefaultTypeInternal _AckAndQueryNewTaskRequest_default_instance_;
}  // namespace MapReduce
static ::_pb::Metadata file_level_metadata_MapReduce_2eproto[2];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_MapReduce_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_MapReduce_2eproto = nullptr;
const ::uint32_t TableStruct_MapReduce_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::MapReduce::AckAndQueryNewTaskRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::MapReduce::AckAndQueryNewTaskRequest, _impl_.previoustaskid_),
    PROTOBUF_FIELD_OFFSET(::MapReduce::AckAndQueryNewTaskRequest, _impl_.tasktype_),
    PROTOBUF_FIELD_OFFSET(::MapReduce::AckAndQueryNewTaskRequest, _impl_.workerid_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::MapReduce::AckAndQueryNewTaskResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::MapReduce::AckAndQueryNewTaskResponse, _impl_.tasktype_),
    PROTOBUF_FIELD_OFFSET(::MapReduce::AckAndQueryNewTaskResponse, _impl_.taskid_),
    PROTOBUF_FIELD_OFFSET(::MapReduce::AckAndQueryNewTaskResponse, _impl_.filename_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::MapReduce::AckAndQueryNewTaskRequest)},
        {11, -1, -1, sizeof(::MapReduce::AckAndQueryNewTaskResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::MapReduce::_AckAndQueryNewTaskRequest_default_instance_._instance,
    &::MapReduce::_AckAndQueryNewTaskResponse_default_instance_._instance,
};
const char descriptor_table_protodef_MapReduce_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\017MapReduce.proto\022\tMapReduce\"W\n\031AckAndQu"
    "eryNewTaskRequest\022\026\n\016previousTaskId\030\001 \001("
    "\005\022\020\n\010taskType\030\002 \001(\t\022\020\n\010workerId\030\003 \001(\t\"P\n"
    "\032AckAndQueryNewTaskResponse\022\020\n\010taskType\030"
    "\001 \001(\t\022\016\n\006taskId\030\002 \001(\005\022\020\n\010fileName\030\003 \001(\t2"
    "p\n\013TaskService\022a\n\022AckAndQueryNewTask\022$.M"
    "apReduce.AckAndQueryNewTaskRequest\032%.Map"
    "Reduce.AckAndQueryNewTaskResponseb\006proto"
    "3"
};
static ::absl::once_flag descriptor_table_MapReduce_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_MapReduce_2eproto = {
    false,
    false,
    321,
    descriptor_table_protodef_MapReduce_2eproto,
    "MapReduce.proto",
    &descriptor_table_MapReduce_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_MapReduce_2eproto::offsets,
    file_level_metadata_MapReduce_2eproto,
    file_level_enum_descriptors_MapReduce_2eproto,
    file_level_service_descriptors_MapReduce_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_MapReduce_2eproto_getter() {
  return &descriptor_table_MapReduce_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_MapReduce_2eproto(&descriptor_table_MapReduce_2eproto);
namespace MapReduce {
// ===================================================================

class AckAndQueryNewTaskRequest::_Internal {
 public:
};

AckAndQueryNewTaskRequest::AckAndQueryNewTaskRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MapReduce.AckAndQueryNewTaskRequest)
}
inline PROTOBUF_NDEBUG_INLINE AckAndQueryNewTaskRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : tasktype_(arena, from.tasktype_),
        workerid_(arena, from.workerid_),
        _cached_size_{0} {}

AckAndQueryNewTaskRequest::AckAndQueryNewTaskRequest(
    ::google::protobuf::Arena* arena,
    const AckAndQueryNewTaskRequest& from)
    : ::google::protobuf::Message(arena) {
  AckAndQueryNewTaskRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.previoustaskid_ = from._impl_.previoustaskid_;

  // @@protoc_insertion_point(copy_constructor:MapReduce.AckAndQueryNewTaskRequest)
}
inline PROTOBUF_NDEBUG_INLINE AckAndQueryNewTaskRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : tasktype_(arena),
        workerid_(arena),
        _cached_size_{0} {}

inline void AckAndQueryNewTaskRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.previoustaskid_ = {};
}
AckAndQueryNewTaskRequest::~AckAndQueryNewTaskRequest() {
  // @@protoc_insertion_point(destructor:MapReduce.AckAndQueryNewTaskRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AckAndQueryNewTaskRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.tasktype_.Destroy();
  _impl_.workerid_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void AckAndQueryNewTaskRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:MapReduce.AckAndQueryNewTaskRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tasktype_.ClearToEmpty();
  _impl_.workerid_.ClearToEmpty();
  _impl_.previoustaskid_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AckAndQueryNewTaskRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 60, 2> AckAndQueryNewTaskRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AckAndQueryNewTaskRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 previousTaskId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AckAndQueryNewTaskRequest, _impl_.previoustaskid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AckAndQueryNewTaskRequest, _impl_.previoustaskid_)}},
    // string taskType = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AckAndQueryNewTaskRequest, _impl_.tasktype_)}},
    // string workerId = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(AckAndQueryNewTaskRequest, _impl_.workerid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 previousTaskId = 1;
    {PROTOBUF_FIELD_OFFSET(AckAndQueryNewTaskRequest, _impl_.previoustaskid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string taskType = 2;
    {PROTOBUF_FIELD_OFFSET(AckAndQueryNewTaskRequest, _impl_.tasktype_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string workerId = 3;
    {PROTOBUF_FIELD_OFFSET(AckAndQueryNewTaskRequest, _impl_.workerid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\43\0\10\10\0\0\0\0"
    "MapReduce.AckAndQueryNewTaskRequest"
    "taskType"
    "workerId"
  }},
};

::uint8_t* AckAndQueryNewTaskRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MapReduce.AckAndQueryNewTaskRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 previousTaskId = 1;
  if (this->_internal_previoustaskid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_previoustaskid(), target);
  }

  // string taskType = 2;
  if (!this->_internal_tasktype().empty()) {
    const std::string& _s = this->_internal_tasktype();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "MapReduce.AckAndQueryNewTaskRequest.taskType");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string workerId = 3;
  if (!this->_internal_workerid().empty()) {
    const std::string& _s = this->_internal_workerid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "MapReduce.AckAndQueryNewTaskRequest.workerId");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MapReduce.AckAndQueryNewTaskRequest)
  return target;
}

::size_t AckAndQueryNewTaskRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MapReduce.AckAndQueryNewTaskRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string taskType = 2;
  if (!this->_internal_tasktype().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_tasktype());
  }

  // string workerId = 3;
  if (!this->_internal_workerid().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_workerid());
  }

  // int32 previousTaskId = 1;
  if (this->_internal_previoustaskid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_previoustaskid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AckAndQueryNewTaskRequest::_class_data_ = {
    AckAndQueryNewTaskRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AckAndQueryNewTaskRequest::GetClassData() const {
  return &_class_data_;
}

void AckAndQueryNewTaskRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AckAndQueryNewTaskRequest*>(&to_msg);
  auto& from = static_cast<const AckAndQueryNewTaskRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:MapReduce.AckAndQueryNewTaskRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_tasktype().empty()) {
    _this->_internal_set_tasktype(from._internal_tasktype());
  }
  if (!from._internal_workerid().empty()) {
    _this->_internal_set_workerid(from._internal_workerid());
  }
  if (from._internal_previoustaskid() != 0) {
    _this->_internal_set_previoustaskid(from._internal_previoustaskid());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AckAndQueryNewTaskRequest::CopyFrom(const AckAndQueryNewTaskRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MapReduce.AckAndQueryNewTaskRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AckAndQueryNewTaskRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* AckAndQueryNewTaskRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AckAndQueryNewTaskRequest::InternalSwap(AckAndQueryNewTaskRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tasktype_, &other->_impl_.tasktype_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.workerid_, &other->_impl_.workerid_, arena);
        swap(_impl_.previoustaskid_, other->_impl_.previoustaskid_);
}

::google::protobuf::Metadata AckAndQueryNewTaskRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_MapReduce_2eproto_getter, &descriptor_table_MapReduce_2eproto_once,
      file_level_metadata_MapReduce_2eproto[0]);
}
// ===================================================================

class AckAndQueryNewTaskResponse::_Internal {
 public:
};

AckAndQueryNewTaskResponse::AckAndQueryNewTaskResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MapReduce.AckAndQueryNewTaskResponse)
}
inline PROTOBUF_NDEBUG_INLINE AckAndQueryNewTaskResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : tasktype_(arena, from.tasktype_),
        filename_(arena, from.filename_),
        _cached_size_{0} {}

AckAndQueryNewTaskResponse::AckAndQueryNewTaskResponse(
    ::google::protobuf::Arena* arena,
    const AckAndQueryNewTaskResponse& from)
    : ::google::protobuf::Message(arena) {
  AckAndQueryNewTaskResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.taskid_ = from._impl_.taskid_;

  // @@protoc_insertion_point(copy_constructor:MapReduce.AckAndQueryNewTaskResponse)
}
inline PROTOBUF_NDEBUG_INLINE AckAndQueryNewTaskResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : tasktype_(arena),
        filename_(arena),
        _cached_size_{0} {}

inline void AckAndQueryNewTaskResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.taskid_ = {};
}
AckAndQueryNewTaskResponse::~AckAndQueryNewTaskResponse() {
  // @@protoc_insertion_point(destructor:MapReduce.AckAndQueryNewTaskResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AckAndQueryNewTaskResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.tasktype_.Destroy();
  _impl_.filename_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void AckAndQueryNewTaskResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:MapReduce.AckAndQueryNewTaskResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tasktype_.ClearToEmpty();
  _impl_.filename_.ClearToEmpty();
  _impl_.taskid_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AckAndQueryNewTaskResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 61, 2> AckAndQueryNewTaskResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AckAndQueryNewTaskResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string taskType = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AckAndQueryNewTaskResponse, _impl_.tasktype_)}},
    // int32 taskId = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AckAndQueryNewTaskResponse, _impl_.taskid_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(AckAndQueryNewTaskResponse, _impl_.taskid_)}},
    // string fileName = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(AckAndQueryNewTaskResponse, _impl_.filename_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string taskType = 1;
    {PROTOBUF_FIELD_OFFSET(AckAndQueryNewTaskResponse, _impl_.tasktype_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 taskId = 2;
    {PROTOBUF_FIELD_OFFSET(AckAndQueryNewTaskResponse, _impl_.taskid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string fileName = 3;
    {PROTOBUF_FIELD_OFFSET(AckAndQueryNewTaskResponse, _impl_.filename_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\44\10\0\10\0\0\0\0"
    "MapReduce.AckAndQueryNewTaskResponse"
    "taskType"
    "fileName"
  }},
};

::uint8_t* AckAndQueryNewTaskResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MapReduce.AckAndQueryNewTaskResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string taskType = 1;
  if (!this->_internal_tasktype().empty()) {
    const std::string& _s = this->_internal_tasktype();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "MapReduce.AckAndQueryNewTaskResponse.taskType");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // int32 taskId = 2;
  if (this->_internal_taskid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_taskid(), target);
  }

  // string fileName = 3;
  if (!this->_internal_filename().empty()) {
    const std::string& _s = this->_internal_filename();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "MapReduce.AckAndQueryNewTaskResponse.fileName");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MapReduce.AckAndQueryNewTaskResponse)
  return target;
}

::size_t AckAndQueryNewTaskResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MapReduce.AckAndQueryNewTaskResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string taskType = 1;
  if (!this->_internal_tasktype().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_tasktype());
  }

  // string fileName = 3;
  if (!this->_internal_filename().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_filename());
  }

  // int32 taskId = 2;
  if (this->_internal_taskid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_taskid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AckAndQueryNewTaskResponse::_class_data_ = {
    AckAndQueryNewTaskResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AckAndQueryNewTaskResponse::GetClassData() const {
  return &_class_data_;
}

void AckAndQueryNewTaskResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AckAndQueryNewTaskResponse*>(&to_msg);
  auto& from = static_cast<const AckAndQueryNewTaskResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:MapReduce.AckAndQueryNewTaskResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_tasktype().empty()) {
    _this->_internal_set_tasktype(from._internal_tasktype());
  }
  if (!from._internal_filename().empty()) {
    _this->_internal_set_filename(from._internal_filename());
  }
  if (from._internal_taskid() != 0) {
    _this->_internal_set_taskid(from._internal_taskid());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AckAndQueryNewTaskResponse::CopyFrom(const AckAndQueryNewTaskResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MapReduce.AckAndQueryNewTaskResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AckAndQueryNewTaskResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* AckAndQueryNewTaskResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AckAndQueryNewTaskResponse::InternalSwap(AckAndQueryNewTaskResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tasktype_, &other->_impl_.tasktype_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.filename_, &other->_impl_.filename_, arena);
        swap(_impl_.taskid_, other->_impl_.taskid_);
}

::google::protobuf::Metadata AckAndQueryNewTaskResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_MapReduce_2eproto_getter, &descriptor_table_MapReduce_2eproto_once,
      file_level_metadata_MapReduce_2eproto[1]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace MapReduce
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
