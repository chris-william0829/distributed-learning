// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: raftRpc.proto

#include "raftRpc.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace raftRpc {

inline constexpr RequestVoteResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : term_{0},
        votegranted_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RequestVoteResponse::RequestVoteResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RequestVoteResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestVoteResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestVoteResponseDefaultTypeInternal() {}
  union {
    RequestVoteResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestVoteResponseDefaultTypeInternal _RequestVoteResponse_default_instance_;

inline constexpr RequestVoteRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : term_{0},
        candidateid_{0},
        lastlogindex_{0},
        lastlogterm_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RequestVoteRequest::RequestVoteRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RequestVoteRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestVoteRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestVoteRequestDefaultTypeInternal() {}
  union {
    RequestVoteRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestVoteRequestDefaultTypeInternal _RequestVoteRequest_default_instance_;

inline constexpr LogEntry::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : command_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        index_{0},
        term_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LogEntry::LogEntry(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct LogEntryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LogEntryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LogEntryDefaultTypeInternal() {}
  union {
    LogEntry _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LogEntryDefaultTypeInternal _LogEntry_default_instance_;

inline constexpr InstallSnapshotResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : term_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR InstallSnapshotResponse::InstallSnapshotResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct InstallSnapshotResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InstallSnapshotResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InstallSnapshotResponseDefaultTypeInternal() {}
  union {
    InstallSnapshotResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InstallSnapshotResponseDefaultTypeInternal _InstallSnapshotResponse_default_instance_;

inline constexpr InstallSnapshotRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        leaderid_{0},
        term_{0},
        lastsnapshotincludeindex_{0},
        lastsnapshotincludeterm_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR InstallSnapshotRequest::InstallSnapshotRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct InstallSnapshotRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InstallSnapshotRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InstallSnapshotRequestDefaultTypeInternal() {}
  union {
    InstallSnapshotRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InstallSnapshotRequestDefaultTypeInternal _InstallSnapshotRequest_default_instance_;

inline constexpr AppendEntriesResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : term_{0},
        success_{false},
        updatenextindex_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AppendEntriesResponse::AppendEntriesResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AppendEntriesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppendEntriesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppendEntriesResponseDefaultTypeInternal() {}
  union {
    AppendEntriesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppendEntriesResponseDefaultTypeInternal _AppendEntriesResponse_default_instance_;

inline constexpr AppendEntriesRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : entries_{},
        term_{0},
        leaderid_{0},
        prevlogindex_{0},
        prevlogterm_{0},
        leadercommit_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AppendEntriesRequest::AppendEntriesRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AppendEntriesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppendEntriesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppendEntriesRequestDefaultTypeInternal() {}
  union {
    AppendEntriesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppendEntriesRequestDefaultTypeInternal _AppendEntriesRequest_default_instance_;
}  // namespace raftRpc
static ::_pb::Metadata file_level_metadata_raftRpc_2eproto[7];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_raftRpc_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_raftRpc_2eproto = nullptr;
const ::uint32_t TableStruct_raftRpc_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::raftRpc::LogEntry, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::raftRpc::LogEntry, _impl_.index_),
    PROTOBUF_FIELD_OFFSET(::raftRpc::LogEntry, _impl_.term_),
    PROTOBUF_FIELD_OFFSET(::raftRpc::LogEntry, _impl_.command_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::raftRpc::AppendEntriesRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::raftRpc::AppendEntriesRequest, _impl_.term_),
    PROTOBUF_FIELD_OFFSET(::raftRpc::AppendEntriesRequest, _impl_.leaderid_),
    PROTOBUF_FIELD_OFFSET(::raftRpc::AppendEntriesRequest, _impl_.prevlogindex_),
    PROTOBUF_FIELD_OFFSET(::raftRpc::AppendEntriesRequest, _impl_.prevlogterm_),
    PROTOBUF_FIELD_OFFSET(::raftRpc::AppendEntriesRequest, _impl_.entries_),
    PROTOBUF_FIELD_OFFSET(::raftRpc::AppendEntriesRequest, _impl_.leadercommit_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::raftRpc::AppendEntriesResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::raftRpc::AppendEntriesResponse, _impl_.term_),
    PROTOBUF_FIELD_OFFSET(::raftRpc::AppendEntriesResponse, _impl_.success_),
    PROTOBUF_FIELD_OFFSET(::raftRpc::AppendEntriesResponse, _impl_.updatenextindex_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::raftRpc::RequestVoteRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::raftRpc::RequestVoteRequest, _impl_.term_),
    PROTOBUF_FIELD_OFFSET(::raftRpc::RequestVoteRequest, _impl_.candidateid_),
    PROTOBUF_FIELD_OFFSET(::raftRpc::RequestVoteRequest, _impl_.lastlogindex_),
    PROTOBUF_FIELD_OFFSET(::raftRpc::RequestVoteRequest, _impl_.lastlogterm_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::raftRpc::RequestVoteResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::raftRpc::RequestVoteResponse, _impl_.term_),
    PROTOBUF_FIELD_OFFSET(::raftRpc::RequestVoteResponse, _impl_.votegranted_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::raftRpc::InstallSnapshotRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::raftRpc::InstallSnapshotRequest, _impl_.leaderid_),
    PROTOBUF_FIELD_OFFSET(::raftRpc::InstallSnapshotRequest, _impl_.term_),
    PROTOBUF_FIELD_OFFSET(::raftRpc::InstallSnapshotRequest, _impl_.lastsnapshotincludeindex_),
    PROTOBUF_FIELD_OFFSET(::raftRpc::InstallSnapshotRequest, _impl_.lastsnapshotincludeterm_),
    PROTOBUF_FIELD_OFFSET(::raftRpc::InstallSnapshotRequest, _impl_.data_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::raftRpc::InstallSnapshotResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::raftRpc::InstallSnapshotResponse, _impl_.term_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::raftRpc::LogEntry)},
        {11, -1, -1, sizeof(::raftRpc::AppendEntriesRequest)},
        {25, -1, -1, sizeof(::raftRpc::AppendEntriesResponse)},
        {36, -1, -1, sizeof(::raftRpc::RequestVoteRequest)},
        {48, -1, -1, sizeof(::raftRpc::RequestVoteResponse)},
        {58, -1, -1, sizeof(::raftRpc::InstallSnapshotRequest)},
        {71, -1, -1, sizeof(::raftRpc::InstallSnapshotResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::raftRpc::_LogEntry_default_instance_._instance,
    &::raftRpc::_AppendEntriesRequest_default_instance_._instance,
    &::raftRpc::_AppendEntriesResponse_default_instance_._instance,
    &::raftRpc::_RequestVoteRequest_default_instance_._instance,
    &::raftRpc::_RequestVoteResponse_default_instance_._instance,
    &::raftRpc::_InstallSnapshotRequest_default_instance_._instance,
    &::raftRpc::_InstallSnapshotResponse_default_instance_._instance,
};
const char descriptor_table_protodef_raftRpc_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\rraftRpc.proto\022\007raftRpc\"8\n\010LogEntry\022\r\n\005"
    "index\030\001 \001(\005\022\014\n\004term\030\002 \001(\005\022\017\n\007command\030\003 \001"
    "(\t\"\233\001\n\024AppendEntriesRequest\022\014\n\004term\030\001 \001("
    "\005\022\020\n\010leaderId\030\002 \001(\005\022\024\n\014prevLogIndex\030\003 \001("
    "\005\022\023\n\013prevLogTerm\030\004 \001(\005\022\"\n\007entries\030\005 \003(\0132"
    "\021.raftRpc.LogEntry\022\024\n\014leaderCommit\030\006 \001(\005"
    "\"O\n\025AppendEntriesResponse\022\014\n\004term\030\001 \001(\005\022"
    "\017\n\007success\030\002 \001(\010\022\027\n\017updateNextIndex\030\003 \001("
    "\005\"b\n\022RequestVoteRequest\022\014\n\004term\030\001 \001(\005\022\023\n"
    "\013candidateId\030\002 \001(\005\022\024\n\014lastLogIndex\030\003 \001(\005"
    "\022\023\n\013lastLogTerm\030\004 \001(\005\"8\n\023RequestVoteResp"
    "onse\022\014\n\004term\030\001 \001(\005\022\023\n\013voteGranted\030\002 \001(\010\""
    "\211\001\n\026InstallSnapshotRequest\022\020\n\010LeaderId\030\001"
    " \001(\005\022\014\n\004Term\030\002 \001(\005\022 \n\030LastSnapShotInclud"
    "eIndex\030\003 \001(\005\022\037\n\027LastSnapShotIncludeTerm\030"
    "\004 \001(\005\022\014\n\004Data\030\005 \001(\014\"\'\n\027InstallSnapshotRe"
    "sponse\022\014\n\004Term\030\001 \001(\0052\200\002\n\016RaftRpcService\022"
    "H\n\013RequestVote\022\033.raftRpc.RequestVoteRequ"
    "est\032\034.raftRpc.RequestVoteResponse\022N\n\rApp"
    "endEntries\022\035.raftRpc.AppendEntriesReques"
    "t\032\036.raftRpc.AppendEntriesResponse\022T\n\017Ins"
    "tallSnapshot\022\037.raftRpc.InstallSnapshotRe"
    "quest\032 .raftRpc.InstallSnapshotResponseb"
    "\006proto3"
};
static ::absl::once_flag descriptor_table_raftRpc_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_raftRpc_2eproto = {
    false,
    false,
    927,
    descriptor_table_protodef_raftRpc_2eproto,
    "raftRpc.proto",
    &descriptor_table_raftRpc_2eproto_once,
    nullptr,
    0,
    7,
    schemas,
    file_default_instances,
    TableStruct_raftRpc_2eproto::offsets,
    file_level_metadata_raftRpc_2eproto,
    file_level_enum_descriptors_raftRpc_2eproto,
    file_level_service_descriptors_raftRpc_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_raftRpc_2eproto_getter() {
  return &descriptor_table_raftRpc_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_raftRpc_2eproto(&descriptor_table_raftRpc_2eproto);
namespace raftRpc {
// ===================================================================

class LogEntry::_Internal {
 public:
};

LogEntry::LogEntry(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:raftRpc.LogEntry)
}
inline PROTOBUF_NDEBUG_INLINE LogEntry::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : command_(arena, from.command_),
        _cached_size_{0} {}

LogEntry::LogEntry(
    ::google::protobuf::Arena* arena,
    const LogEntry& from)
    : ::google::protobuf::Message(arena) {
  LogEntry* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, index_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, index_),
           offsetof(Impl_, term_) -
               offsetof(Impl_, index_) +
               sizeof(Impl_::term_));

  // @@protoc_insertion_point(copy_constructor:raftRpc.LogEntry)
}
inline PROTOBUF_NDEBUG_INLINE LogEntry::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : command_(arena),
        _cached_size_{0} {}

inline void LogEntry::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, index_),
           0,
           offsetof(Impl_, term_) -
               offsetof(Impl_, index_) +
               sizeof(Impl_::term_));
}
LogEntry::~LogEntry() {
  // @@protoc_insertion_point(destructor:raftRpc.LogEntry)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void LogEntry::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.command_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void LogEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:raftRpc.LogEntry)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.command_.ClearToEmpty();
  ::memset(&_impl_.index_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.term_) -
      reinterpret_cast<char*>(&_impl_.index_)) + sizeof(_impl_.term_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* LogEntry::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 32, 2> LogEntry::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_LogEntry_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 index = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LogEntry, _impl_.index_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(LogEntry, _impl_.index_)}},
    // int32 term = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LogEntry, _impl_.term_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(LogEntry, _impl_.term_)}},
    // string command = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(LogEntry, _impl_.command_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 index = 1;
    {PROTOBUF_FIELD_OFFSET(LogEntry, _impl_.index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 term = 2;
    {PROTOBUF_FIELD_OFFSET(LogEntry, _impl_.term_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string command = 3;
    {PROTOBUF_FIELD_OFFSET(LogEntry, _impl_.command_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\20\0\0\7\0\0\0\0"
    "raftRpc.LogEntry"
    "command"
  }},
};

::uint8_t* LogEntry::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:raftRpc.LogEntry)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 index = 1;
  if (this->_internal_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_index(), target);
  }

  // int32 term = 2;
  if (this->_internal_term() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_term(), target);
  }

  // string command = 3;
  if (!this->_internal_command().empty()) {
    const std::string& _s = this->_internal_command();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "raftRpc.LogEntry.command");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raftRpc.LogEntry)
  return target;
}

::size_t LogEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raftRpc.LogEntry)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 3;
  if (!this->_internal_command().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_command());
  }

  // int32 index = 1;
  if (this->_internal_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_index());
  }

  // int32 term = 2;
  if (this->_internal_term() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_term());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData LogEntry::_class_data_ = {
    LogEntry::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* LogEntry::GetClassData() const {
  return &_class_data_;
}

void LogEntry::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<LogEntry*>(&to_msg);
  auto& from = static_cast<const LogEntry&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:raftRpc.LogEntry)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_command().empty()) {
    _this->_internal_set_command(from._internal_command());
  }
  if (from._internal_index() != 0) {
    _this->_internal_set_index(from._internal_index());
  }
  if (from._internal_term() != 0) {
    _this->_internal_set_term(from._internal_term());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LogEntry::CopyFrom(const LogEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raftRpc.LogEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool LogEntry::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* LogEntry::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void LogEntry::InternalSwap(LogEntry* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.command_, &other->_impl_.command_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LogEntry, _impl_.term_)
      + sizeof(LogEntry::_impl_.term_)
      - PROTOBUF_FIELD_OFFSET(LogEntry, _impl_.index_)>(
          reinterpret_cast<char*>(&_impl_.index_),
          reinterpret_cast<char*>(&other->_impl_.index_));
}

::google::protobuf::Metadata LogEntry::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_raftRpc_2eproto_getter, &descriptor_table_raftRpc_2eproto_once,
      file_level_metadata_raftRpc_2eproto[0]);
}
// ===================================================================

class AppendEntriesRequest::_Internal {
 public:
};

AppendEntriesRequest::AppendEntriesRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:raftRpc.AppendEntriesRequest)
}
inline PROTOBUF_NDEBUG_INLINE AppendEntriesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : entries_{visibility, arena, from.entries_},
        _cached_size_{0} {}

AppendEntriesRequest::AppendEntriesRequest(
    ::google::protobuf::Arena* arena,
    const AppendEntriesRequest& from)
    : ::google::protobuf::Message(arena) {
  AppendEntriesRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, term_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, term_),
           offsetof(Impl_, leadercommit_) -
               offsetof(Impl_, term_) +
               sizeof(Impl_::leadercommit_));

  // @@protoc_insertion_point(copy_constructor:raftRpc.AppendEntriesRequest)
}
inline PROTOBUF_NDEBUG_INLINE AppendEntriesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : entries_{visibility, arena},
        _cached_size_{0} {}

inline void AppendEntriesRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, term_),
           0,
           offsetof(Impl_, leadercommit_) -
               offsetof(Impl_, term_) +
               sizeof(Impl_::leadercommit_));
}
AppendEntriesRequest::~AppendEntriesRequest() {
  // @@protoc_insertion_point(destructor:raftRpc.AppendEntriesRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AppendEntriesRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void AppendEntriesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:raftRpc.AppendEntriesRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.entries_.Clear();
  ::memset(&_impl_.term_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.leadercommit_) -
      reinterpret_cast<char*>(&_impl_.term_)) + sizeof(_impl_.leadercommit_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AppendEntriesRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 0, 2> AppendEntriesRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AppendEntriesRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 term = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppendEntriesRequest, _impl_.term_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AppendEntriesRequest, _impl_.term_)}},
    // int32 leaderId = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppendEntriesRequest, _impl_.leaderid_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(AppendEntriesRequest, _impl_.leaderid_)}},
    // int32 prevLogIndex = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppendEntriesRequest, _impl_.prevlogindex_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(AppendEntriesRequest, _impl_.prevlogindex_)}},
    // int32 prevLogTerm = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppendEntriesRequest, _impl_.prevlogterm_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(AppendEntriesRequest, _impl_.prevlogterm_)}},
    // repeated .raftRpc.LogEntry entries = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(AppendEntriesRequest, _impl_.entries_)}},
    // int32 leaderCommit = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppendEntriesRequest, _impl_.leadercommit_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(AppendEntriesRequest, _impl_.leadercommit_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 term = 1;
    {PROTOBUF_FIELD_OFFSET(AppendEntriesRequest, _impl_.term_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 leaderId = 2;
    {PROTOBUF_FIELD_OFFSET(AppendEntriesRequest, _impl_.leaderid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 prevLogIndex = 3;
    {PROTOBUF_FIELD_OFFSET(AppendEntriesRequest, _impl_.prevlogindex_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 prevLogTerm = 4;
    {PROTOBUF_FIELD_OFFSET(AppendEntriesRequest, _impl_.prevlogterm_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated .raftRpc.LogEntry entries = 5;
    {PROTOBUF_FIELD_OFFSET(AppendEntriesRequest, _impl_.entries_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 leaderCommit = 6;
    {PROTOBUF_FIELD_OFFSET(AppendEntriesRequest, _impl_.leadercommit_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::raftRpc::LogEntry>()},
  }}, {{
  }},
};

::uint8_t* AppendEntriesRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:raftRpc.AppendEntriesRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 term = 1;
  if (this->_internal_term() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_term(), target);
  }

  // int32 leaderId = 2;
  if (this->_internal_leaderid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_leaderid(), target);
  }

  // int32 prevLogIndex = 3;
  if (this->_internal_prevlogindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_prevlogindex(), target);
  }

  // int32 prevLogTerm = 4;
  if (this->_internal_prevlogterm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_prevlogterm(), target);
  }

  // repeated .raftRpc.LogEntry entries = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_entries_size()); i < n; i++) {
    const auto& repfield = this->_internal_entries().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  // int32 leaderCommit = 6;
  if (this->_internal_leadercommit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<6>(
            stream, this->_internal_leadercommit(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raftRpc.AppendEntriesRequest)
  return target;
}

::size_t AppendEntriesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raftRpc.AppendEntriesRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .raftRpc.LogEntry entries = 5;
  total_size += 1UL * this->_internal_entries_size();
  for (const auto& msg : this->_internal_entries()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // int32 term = 1;
  if (this->_internal_term() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_term());
  }

  // int32 leaderId = 2;
  if (this->_internal_leaderid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_leaderid());
  }

  // int32 prevLogIndex = 3;
  if (this->_internal_prevlogindex() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_prevlogindex());
  }

  // int32 prevLogTerm = 4;
  if (this->_internal_prevlogterm() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_prevlogterm());
  }

  // int32 leaderCommit = 6;
  if (this->_internal_leadercommit() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_leadercommit());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AppendEntriesRequest::_class_data_ = {
    AppendEntriesRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AppendEntriesRequest::GetClassData() const {
  return &_class_data_;
}

void AppendEntriesRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AppendEntriesRequest*>(&to_msg);
  auto& from = static_cast<const AppendEntriesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:raftRpc.AppendEntriesRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_entries()->MergeFrom(
      from._internal_entries());
  if (from._internal_term() != 0) {
    _this->_internal_set_term(from._internal_term());
  }
  if (from._internal_leaderid() != 0) {
    _this->_internal_set_leaderid(from._internal_leaderid());
  }
  if (from._internal_prevlogindex() != 0) {
    _this->_internal_set_prevlogindex(from._internal_prevlogindex());
  }
  if (from._internal_prevlogterm() != 0) {
    _this->_internal_set_prevlogterm(from._internal_prevlogterm());
  }
  if (from._internal_leadercommit() != 0) {
    _this->_internal_set_leadercommit(from._internal_leadercommit());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AppendEntriesRequest::CopyFrom(const AppendEntriesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raftRpc.AppendEntriesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AppendEntriesRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* AppendEntriesRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AppendEntriesRequest::InternalSwap(AppendEntriesRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.entries_.InternalSwap(&other->_impl_.entries_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AppendEntriesRequest, _impl_.leadercommit_)
      + sizeof(AppendEntriesRequest::_impl_.leadercommit_)
      - PROTOBUF_FIELD_OFFSET(AppendEntriesRequest, _impl_.term_)>(
          reinterpret_cast<char*>(&_impl_.term_),
          reinterpret_cast<char*>(&other->_impl_.term_));
}

::google::protobuf::Metadata AppendEntriesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_raftRpc_2eproto_getter, &descriptor_table_raftRpc_2eproto_once,
      file_level_metadata_raftRpc_2eproto[1]);
}
// ===================================================================

class AppendEntriesResponse::_Internal {
 public:
};

AppendEntriesResponse::AppendEntriesResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:raftRpc.AppendEntriesResponse)
}
AppendEntriesResponse::AppendEntriesResponse(
    ::google::protobuf::Arena* arena, const AppendEntriesResponse& from)
    : AppendEntriesResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AppendEntriesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AppendEntriesResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, term_),
           0,
           offsetof(Impl_, updatenextindex_) -
               offsetof(Impl_, term_) +
               sizeof(Impl_::updatenextindex_));
}
AppendEntriesResponse::~AppendEntriesResponse() {
  // @@protoc_insertion_point(destructor:raftRpc.AppendEntriesResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AppendEntriesResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void AppendEntriesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:raftRpc.AppendEntriesResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.term_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.updatenextindex_) -
      reinterpret_cast<char*>(&_impl_.term_)) + sizeof(_impl_.updatenextindex_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AppendEntriesResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> AppendEntriesResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AppendEntriesResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 term = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppendEntriesResponse, _impl_.term_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AppendEntriesResponse, _impl_.term_)}},
    // bool success = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AppendEntriesResponse, _impl_.success_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(AppendEntriesResponse, _impl_.success_)}},
    // int32 updateNextIndex = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppendEntriesResponse, _impl_.updatenextindex_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(AppendEntriesResponse, _impl_.updatenextindex_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 term = 1;
    {PROTOBUF_FIELD_OFFSET(AppendEntriesResponse, _impl_.term_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bool success = 2;
    {PROTOBUF_FIELD_OFFSET(AppendEntriesResponse, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // int32 updateNextIndex = 3;
    {PROTOBUF_FIELD_OFFSET(AppendEntriesResponse, _impl_.updatenextindex_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* AppendEntriesResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:raftRpc.AppendEntriesResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 term = 1;
  if (this->_internal_term() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_term(), target);
  }

  // bool success = 2;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_success(), target);
  }

  // int32 updateNextIndex = 3;
  if (this->_internal_updatenextindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_updatenextindex(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raftRpc.AppendEntriesResponse)
  return target;
}

::size_t AppendEntriesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raftRpc.AppendEntriesResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 term = 1;
  if (this->_internal_term() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_term());
  }

  // bool success = 2;
  if (this->_internal_success() != 0) {
    total_size += 2;
  }

  // int32 updateNextIndex = 3;
  if (this->_internal_updatenextindex() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_updatenextindex());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AppendEntriesResponse::_class_data_ = {
    AppendEntriesResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AppendEntriesResponse::GetClassData() const {
  return &_class_data_;
}

void AppendEntriesResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AppendEntriesResponse*>(&to_msg);
  auto& from = static_cast<const AppendEntriesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:raftRpc.AppendEntriesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_term() != 0) {
    _this->_internal_set_term(from._internal_term());
  }
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  if (from._internal_updatenextindex() != 0) {
    _this->_internal_set_updatenextindex(from._internal_updatenextindex());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AppendEntriesResponse::CopyFrom(const AppendEntriesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raftRpc.AppendEntriesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AppendEntriesResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* AppendEntriesResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AppendEntriesResponse::InternalSwap(AppendEntriesResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AppendEntriesResponse, _impl_.updatenextindex_)
      + sizeof(AppendEntriesResponse::_impl_.updatenextindex_)
      - PROTOBUF_FIELD_OFFSET(AppendEntriesResponse, _impl_.term_)>(
          reinterpret_cast<char*>(&_impl_.term_),
          reinterpret_cast<char*>(&other->_impl_.term_));
}

::google::protobuf::Metadata AppendEntriesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_raftRpc_2eproto_getter, &descriptor_table_raftRpc_2eproto_once,
      file_level_metadata_raftRpc_2eproto[2]);
}
// ===================================================================

class RequestVoteRequest::_Internal {
 public:
};

RequestVoteRequest::RequestVoteRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:raftRpc.RequestVoteRequest)
}
RequestVoteRequest::RequestVoteRequest(
    ::google::protobuf::Arena* arena, const RequestVoteRequest& from)
    : RequestVoteRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE RequestVoteRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RequestVoteRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, term_),
           0,
           offsetof(Impl_, lastlogterm_) -
               offsetof(Impl_, term_) +
               sizeof(Impl_::lastlogterm_));
}
RequestVoteRequest::~RequestVoteRequest() {
  // @@protoc_insertion_point(destructor:raftRpc.RequestVoteRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RequestVoteRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RequestVoteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:raftRpc.RequestVoteRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.term_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.lastlogterm_) -
      reinterpret_cast<char*>(&_impl_.term_)) + sizeof(_impl_.lastlogterm_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RequestVoteRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> RequestVoteRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RequestVoteRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 lastLogTerm = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RequestVoteRequest, _impl_.lastlogterm_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(RequestVoteRequest, _impl_.lastlogterm_)}},
    // int32 term = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RequestVoteRequest, _impl_.term_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RequestVoteRequest, _impl_.term_)}},
    // int32 candidateId = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RequestVoteRequest, _impl_.candidateid_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(RequestVoteRequest, _impl_.candidateid_)}},
    // int32 lastLogIndex = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RequestVoteRequest, _impl_.lastlogindex_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(RequestVoteRequest, _impl_.lastlogindex_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 term = 1;
    {PROTOBUF_FIELD_OFFSET(RequestVoteRequest, _impl_.term_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 candidateId = 2;
    {PROTOBUF_FIELD_OFFSET(RequestVoteRequest, _impl_.candidateid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 lastLogIndex = 3;
    {PROTOBUF_FIELD_OFFSET(RequestVoteRequest, _impl_.lastlogindex_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 lastLogTerm = 4;
    {PROTOBUF_FIELD_OFFSET(RequestVoteRequest, _impl_.lastlogterm_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* RequestVoteRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:raftRpc.RequestVoteRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 term = 1;
  if (this->_internal_term() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_term(), target);
  }

  // int32 candidateId = 2;
  if (this->_internal_candidateid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_candidateid(), target);
  }

  // int32 lastLogIndex = 3;
  if (this->_internal_lastlogindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_lastlogindex(), target);
  }

  // int32 lastLogTerm = 4;
  if (this->_internal_lastlogterm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_lastlogterm(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raftRpc.RequestVoteRequest)
  return target;
}

::size_t RequestVoteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raftRpc.RequestVoteRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 term = 1;
  if (this->_internal_term() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_term());
  }

  // int32 candidateId = 2;
  if (this->_internal_candidateid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_candidateid());
  }

  // int32 lastLogIndex = 3;
  if (this->_internal_lastlogindex() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_lastlogindex());
  }

  // int32 lastLogTerm = 4;
  if (this->_internal_lastlogterm() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_lastlogterm());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RequestVoteRequest::_class_data_ = {
    RequestVoteRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RequestVoteRequest::GetClassData() const {
  return &_class_data_;
}

void RequestVoteRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RequestVoteRequest*>(&to_msg);
  auto& from = static_cast<const RequestVoteRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:raftRpc.RequestVoteRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_term() != 0) {
    _this->_internal_set_term(from._internal_term());
  }
  if (from._internal_candidateid() != 0) {
    _this->_internal_set_candidateid(from._internal_candidateid());
  }
  if (from._internal_lastlogindex() != 0) {
    _this->_internal_set_lastlogindex(from._internal_lastlogindex());
  }
  if (from._internal_lastlogterm() != 0) {
    _this->_internal_set_lastlogterm(from._internal_lastlogterm());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RequestVoteRequest::CopyFrom(const RequestVoteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raftRpc.RequestVoteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RequestVoteRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RequestVoteRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RequestVoteRequest::InternalSwap(RequestVoteRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RequestVoteRequest, _impl_.lastlogterm_)
      + sizeof(RequestVoteRequest::_impl_.lastlogterm_)
      - PROTOBUF_FIELD_OFFSET(RequestVoteRequest, _impl_.term_)>(
          reinterpret_cast<char*>(&_impl_.term_),
          reinterpret_cast<char*>(&other->_impl_.term_));
}

::google::protobuf::Metadata RequestVoteRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_raftRpc_2eproto_getter, &descriptor_table_raftRpc_2eproto_once,
      file_level_metadata_raftRpc_2eproto[3]);
}
// ===================================================================

class RequestVoteResponse::_Internal {
 public:
};

RequestVoteResponse::RequestVoteResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:raftRpc.RequestVoteResponse)
}
RequestVoteResponse::RequestVoteResponse(
    ::google::protobuf::Arena* arena, const RequestVoteResponse& from)
    : RequestVoteResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE RequestVoteResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RequestVoteResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, term_),
           0,
           offsetof(Impl_, votegranted_) -
               offsetof(Impl_, term_) +
               sizeof(Impl_::votegranted_));
}
RequestVoteResponse::~RequestVoteResponse() {
  // @@protoc_insertion_point(destructor:raftRpc.RequestVoteResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RequestVoteResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RequestVoteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:raftRpc.RequestVoteResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.term_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.votegranted_) -
      reinterpret_cast<char*>(&_impl_.term_)) + sizeof(_impl_.votegranted_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RequestVoteResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> RequestVoteResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RequestVoteResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bool voteGranted = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RequestVoteResponse, _impl_.votegranted_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(RequestVoteResponse, _impl_.votegranted_)}},
    // int32 term = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RequestVoteResponse, _impl_.term_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RequestVoteResponse, _impl_.term_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 term = 1;
    {PROTOBUF_FIELD_OFFSET(RequestVoteResponse, _impl_.term_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bool voteGranted = 2;
    {PROTOBUF_FIELD_OFFSET(RequestVoteResponse, _impl_.votegranted_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* RequestVoteResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:raftRpc.RequestVoteResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 term = 1;
  if (this->_internal_term() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_term(), target);
  }

  // bool voteGranted = 2;
  if (this->_internal_votegranted() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_votegranted(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raftRpc.RequestVoteResponse)
  return target;
}

::size_t RequestVoteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raftRpc.RequestVoteResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 term = 1;
  if (this->_internal_term() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_term());
  }

  // bool voteGranted = 2;
  if (this->_internal_votegranted() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RequestVoteResponse::_class_data_ = {
    RequestVoteResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RequestVoteResponse::GetClassData() const {
  return &_class_data_;
}

void RequestVoteResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RequestVoteResponse*>(&to_msg);
  auto& from = static_cast<const RequestVoteResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:raftRpc.RequestVoteResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_term() != 0) {
    _this->_internal_set_term(from._internal_term());
  }
  if (from._internal_votegranted() != 0) {
    _this->_internal_set_votegranted(from._internal_votegranted());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RequestVoteResponse::CopyFrom(const RequestVoteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raftRpc.RequestVoteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RequestVoteResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RequestVoteResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RequestVoteResponse::InternalSwap(RequestVoteResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RequestVoteResponse, _impl_.votegranted_)
      + sizeof(RequestVoteResponse::_impl_.votegranted_)
      - PROTOBUF_FIELD_OFFSET(RequestVoteResponse, _impl_.term_)>(
          reinterpret_cast<char*>(&_impl_.term_),
          reinterpret_cast<char*>(&other->_impl_.term_));
}

::google::protobuf::Metadata RequestVoteResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_raftRpc_2eproto_getter, &descriptor_table_raftRpc_2eproto_once,
      file_level_metadata_raftRpc_2eproto[4]);
}
// ===================================================================

class InstallSnapshotRequest::_Internal {
 public:
};

InstallSnapshotRequest::InstallSnapshotRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:raftRpc.InstallSnapshotRequest)
}
inline PROTOBUF_NDEBUG_INLINE InstallSnapshotRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : data_(arena, from.data_),
        _cached_size_{0} {}

InstallSnapshotRequest::InstallSnapshotRequest(
    ::google::protobuf::Arena* arena,
    const InstallSnapshotRequest& from)
    : ::google::protobuf::Message(arena) {
  InstallSnapshotRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, leaderid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, leaderid_),
           offsetof(Impl_, lastsnapshotincludeterm_) -
               offsetof(Impl_, leaderid_) +
               sizeof(Impl_::lastsnapshotincludeterm_));

  // @@protoc_insertion_point(copy_constructor:raftRpc.InstallSnapshotRequest)
}
inline PROTOBUF_NDEBUG_INLINE InstallSnapshotRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_(arena),
        _cached_size_{0} {}

inline void InstallSnapshotRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, leaderid_),
           0,
           offsetof(Impl_, lastsnapshotincludeterm_) -
               offsetof(Impl_, leaderid_) +
               sizeof(Impl_::lastsnapshotincludeterm_));
}
InstallSnapshotRequest::~InstallSnapshotRequest() {
  // @@protoc_insertion_point(destructor:raftRpc.InstallSnapshotRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void InstallSnapshotRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.data_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void InstallSnapshotRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:raftRpc.InstallSnapshotRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.ClearToEmpty();
  ::memset(&_impl_.leaderid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.lastsnapshotincludeterm_) -
      reinterpret_cast<char*>(&_impl_.leaderid_)) + sizeof(_impl_.lastsnapshotincludeterm_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* InstallSnapshotRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2> InstallSnapshotRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_InstallSnapshotRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 LeaderId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(InstallSnapshotRequest, _impl_.leaderid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(InstallSnapshotRequest, _impl_.leaderid_)}},
    // int32 Term = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(InstallSnapshotRequest, _impl_.term_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(InstallSnapshotRequest, _impl_.term_)}},
    // int32 LastSnapShotIncludeIndex = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(InstallSnapshotRequest, _impl_.lastsnapshotincludeindex_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(InstallSnapshotRequest, _impl_.lastsnapshotincludeindex_)}},
    // int32 LastSnapShotIncludeTerm = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(InstallSnapshotRequest, _impl_.lastsnapshotincludeterm_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(InstallSnapshotRequest, _impl_.lastsnapshotincludeterm_)}},
    // bytes Data = 5;
    {::_pbi::TcParser::FastBS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(InstallSnapshotRequest, _impl_.data_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 LeaderId = 1;
    {PROTOBUF_FIELD_OFFSET(InstallSnapshotRequest, _impl_.leaderid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 Term = 2;
    {PROTOBUF_FIELD_OFFSET(InstallSnapshotRequest, _impl_.term_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 LastSnapShotIncludeIndex = 3;
    {PROTOBUF_FIELD_OFFSET(InstallSnapshotRequest, _impl_.lastsnapshotincludeindex_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 LastSnapShotIncludeTerm = 4;
    {PROTOBUF_FIELD_OFFSET(InstallSnapshotRequest, _impl_.lastsnapshotincludeterm_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bytes Data = 5;
    {PROTOBUF_FIELD_OFFSET(InstallSnapshotRequest, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* InstallSnapshotRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:raftRpc.InstallSnapshotRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 LeaderId = 1;
  if (this->_internal_leaderid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_leaderid(), target);
  }

  // int32 Term = 2;
  if (this->_internal_term() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_term(), target);
  }

  // int32 LastSnapShotIncludeIndex = 3;
  if (this->_internal_lastsnapshotincludeindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_lastsnapshotincludeindex(), target);
  }

  // int32 LastSnapShotIncludeTerm = 4;
  if (this->_internal_lastsnapshotincludeterm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_lastsnapshotincludeterm(), target);
  }

  // bytes Data = 5;
  if (!this->_internal_data().empty()) {
    const std::string& _s = this->_internal_data();
    target = stream->WriteBytesMaybeAliased(5, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raftRpc.InstallSnapshotRequest)
  return target;
}

::size_t InstallSnapshotRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raftRpc.InstallSnapshotRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes Data = 5;
  if (!this->_internal_data().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_data());
  }

  // int32 LeaderId = 1;
  if (this->_internal_leaderid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_leaderid());
  }

  // int32 Term = 2;
  if (this->_internal_term() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_term());
  }

  // int32 LastSnapShotIncludeIndex = 3;
  if (this->_internal_lastsnapshotincludeindex() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_lastsnapshotincludeindex());
  }

  // int32 LastSnapShotIncludeTerm = 4;
  if (this->_internal_lastsnapshotincludeterm() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_lastsnapshotincludeterm());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData InstallSnapshotRequest::_class_data_ = {
    InstallSnapshotRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* InstallSnapshotRequest::GetClassData() const {
  return &_class_data_;
}

void InstallSnapshotRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<InstallSnapshotRequest*>(&to_msg);
  auto& from = static_cast<const InstallSnapshotRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:raftRpc.InstallSnapshotRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  if (from._internal_leaderid() != 0) {
    _this->_internal_set_leaderid(from._internal_leaderid());
  }
  if (from._internal_term() != 0) {
    _this->_internal_set_term(from._internal_term());
  }
  if (from._internal_lastsnapshotincludeindex() != 0) {
    _this->_internal_set_lastsnapshotincludeindex(from._internal_lastsnapshotincludeindex());
  }
  if (from._internal_lastsnapshotincludeterm() != 0) {
    _this->_internal_set_lastsnapshotincludeterm(from._internal_lastsnapshotincludeterm());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InstallSnapshotRequest::CopyFrom(const InstallSnapshotRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raftRpc.InstallSnapshotRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool InstallSnapshotRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* InstallSnapshotRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void InstallSnapshotRequest::InternalSwap(InstallSnapshotRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InstallSnapshotRequest, _impl_.lastsnapshotincludeterm_)
      + sizeof(InstallSnapshotRequest::_impl_.lastsnapshotincludeterm_)
      - PROTOBUF_FIELD_OFFSET(InstallSnapshotRequest, _impl_.leaderid_)>(
          reinterpret_cast<char*>(&_impl_.leaderid_),
          reinterpret_cast<char*>(&other->_impl_.leaderid_));
}

::google::protobuf::Metadata InstallSnapshotRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_raftRpc_2eproto_getter, &descriptor_table_raftRpc_2eproto_once,
      file_level_metadata_raftRpc_2eproto[5]);
}
// ===================================================================

class InstallSnapshotResponse::_Internal {
 public:
};

InstallSnapshotResponse::InstallSnapshotResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:raftRpc.InstallSnapshotResponse)
}
InstallSnapshotResponse::InstallSnapshotResponse(
    ::google::protobuf::Arena* arena, const InstallSnapshotResponse& from)
    : InstallSnapshotResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE InstallSnapshotResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void InstallSnapshotResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.term_ = {};
}
InstallSnapshotResponse::~InstallSnapshotResponse() {
  // @@protoc_insertion_point(destructor:raftRpc.InstallSnapshotResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void InstallSnapshotResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void InstallSnapshotResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:raftRpc.InstallSnapshotResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.term_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* InstallSnapshotResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> InstallSnapshotResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_InstallSnapshotResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 Term = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(InstallSnapshotResponse, _impl_.term_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(InstallSnapshotResponse, _impl_.term_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 Term = 1;
    {PROTOBUF_FIELD_OFFSET(InstallSnapshotResponse, _impl_.term_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* InstallSnapshotResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:raftRpc.InstallSnapshotResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 Term = 1;
  if (this->_internal_term() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_term(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raftRpc.InstallSnapshotResponse)
  return target;
}

::size_t InstallSnapshotResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raftRpc.InstallSnapshotResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Term = 1;
  if (this->_internal_term() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_term());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData InstallSnapshotResponse::_class_data_ = {
    InstallSnapshotResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* InstallSnapshotResponse::GetClassData() const {
  return &_class_data_;
}

void InstallSnapshotResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<InstallSnapshotResponse*>(&to_msg);
  auto& from = static_cast<const InstallSnapshotResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:raftRpc.InstallSnapshotResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_term() != 0) {
    _this->_internal_set_term(from._internal_term());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InstallSnapshotResponse::CopyFrom(const InstallSnapshotResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raftRpc.InstallSnapshotResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool InstallSnapshotResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* InstallSnapshotResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void InstallSnapshotResponse::InternalSwap(InstallSnapshotResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.term_, other->_impl_.term_);
}

::google::protobuf::Metadata InstallSnapshotResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_raftRpc_2eproto_getter, &descriptor_table_raftRpc_2eproto_once,
      file_level_metadata_raftRpc_2eproto[6]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace raftRpc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
